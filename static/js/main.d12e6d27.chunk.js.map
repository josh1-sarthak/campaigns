{"version":3,"sources":["icons/calendar.svg","icons/file.svg","icons/Price.svg","icons/statistics-report.svg","Components/TableContent.js","Components/TabContent.js","icons/logo.png","App.js","i18n.js","index.js"],"names":["today","Date","now","Pricing","props","useState","open","setOpen","handleChange","Modal","size","onClose","onOpen","trigger","className","Image","src","priceIcon","alt","verticalAlign","tablelocale","item","price","Content","process","image_url","name","region","duration","cost","map","pack","style","textAlign","float","onClick","Reschedule","onTableUpdate","createdOn","startDate","setStartDate","showcal","setShowCal","useEffect","datems","getTime","calIcon","selected","onChange","date","withTranslation","t","Table","Header","Row","HeaderCell","colSpan","Body","campaignData","Cell","toLocaleString","month","getFullYear","getDate","Math","abs","ceil","as","image","Subheader","csvIcon","csv","reportIcon","report","onTabUpdate","calculateDays","upcomingCampaign","campaigns","filter","liveCampaign","pastCampaign","onUpdate","campaignArray","input","data","storeCampaign","localStorage","getItem","JSON","parse","setCampaigns","handleUpdate","game","dtval","updatedCampaigns","setItem","stringify","panes","category","menuItem","render","Tab","Pane","attached","Grid","centered","Column","height","background","logo","width","left","top","Dropdown","selection","options","key","text","value","e","language","i18n","changeLanguage","handleDropdown","placeholder","menu","secondary","pointing","undefined","use","initReactI18next","init","resources","en","translations","sv","fallbackLng","lng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","useSuspense","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d12e6d27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calendar.a0489425.svg\";","export default __webpack_public_path__ + \"static/media/file.bb5c065d.svg\";","export default __webpack_public_path__ + \"static/media/Price.9e9bdbdb.svg\";","export default __webpack_public_path__ + \"static/media/statistics-report.5cc7cb59.svg\";","import React, {useState, useEffect} from 'react';\r\nimport { Table, Image, Header, Modal } from 'semantic-ui-react';\r\nimport { default as calIcon } from '../icons/calendar.svg';\r\nimport { default as csvIcon } from '../icons/file.svg';\r\nimport { default as priceIcon } from '../icons/Price.svg';\r\nimport { default as reportIcon } from '../icons/statistics-report.svg';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst calculateDays = 1000*60*60*24;\r\n// calculations are done according to the current time so yesterday's afternoon campaign can still run up on live till today's afternoon until the 24 hour window period is over\r\nlet today = Date.now();\r\n\r\nconst TableContent = (props) => {\r\n  // t for localization\r\n    const { t } = props;\r\n\r\n  return (\r\n      <Table>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell> {t(\"DATE\")} </Table.HeaderCell>\r\n            <Table.HeaderCell> {t(\"CAMPAIGN\")} </Table.HeaderCell> \r\n            <Table.HeaderCell> {t(\"VIEW\")} </Table.HeaderCell> \r\n            <Table.HeaderCell colSpan='3'> {t(\"ACTIONS\")} </Table.HeaderCell> \r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {props.campaignData.map(item =>\r\n            <Table.Row key={item.name}>\r\n              <Table.Cell> \r\n                {new Date(item.createdOn).toLocaleString('default', { month:'short'})} {new Date(item.createdOn).getFullYear()}, {new Date(item.createdOn).getDate()} <br/>\r\n                <em> {Math.abs(Math.ceil((item.createdOn - today)/calculateDays))} {t(\"Days\")} {props.className} </em>\r\n              </Table.Cell>\r\n              <Table.Cell> \r\n                <Header as='h4' image>\r\n                  <Image src={process.env.PUBLIC_URL + item.image_url} />\r\n                  <Header.Content>\r\n                    {item.name}\r\n                    <Header.Subheader> {item.region} </Header.Subheader>\r\n                  </Header.Content>\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Pricing item={item} tablelocale={t}/>\r\n              </Table.Cell>\r\n              <Table.Cell> <span className=\"noContentInside\"> <Image src={csvIcon} alt='csv' verticalAlign='middle' /> {item.csv} </span> </Table.Cell>\r\n              <Table.Cell> <span className=\"noContentInside\"> <Image src={reportIcon} alt='report' verticalAlign='middle' /> {t(item.report)} </span> </Table.Cell>\r\n              <Table.Cell> \r\n              <Reschedule item={item} onTableUpdate={props.onTabUpdate} tablelocale={t} />\r\n              </Table.Cell> \r\n            </Table.Row> \r\n          )}\r\n        </Table.Body>\r\n      </Table>\r\n  )\r\n}\r\n\r\n// Pricing Component - renders Pricing Modal\r\nconst Pricing = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  const subscriptions = [\r\n    {\r\n      duration: '1 Week - 1 Month',\r\n      cost: '$100.00',\r\n    },\r\n    {\r\n      duration: '6 Months',\r\n      cost: '$100.00',\r\n    },\r\n    {\r\n      duration: '1 Year',\r\n      cost: '$100.00',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n        <Modal size='mini' onClose={handleChange} onOpen={handleChange} open={open} \r\n        trigger={\r\n        <span className='viewPrice'><Image src={priceIcon} alt='price' verticalAlign='middle' /> {props.tablelocale(props.item.price)} </span>}>\r\n          <Modal.Content>\r\n            <div className='headModal'>\r\n              <Image src={process.env.PUBLIC_URL + props.item.image_url} />\r\n                <div className='modalHeadContent'> \r\n                <strong> {props.item.name} </strong> <br/>\r\n                {props.item.region} </div>\r\n            </div>\r\n            <div className='bodyModal'>\r\n              <h3> {props.tablelocale(\"Pricing\")} </h3>\r\n              {subscriptions.map(pack => \r\n                <p key={pack.duration} style={{textAlign: 'left'}}> {props.tablelocale(pack.duration)} <span style={{float: 'right'}}><strong> {pack.cost} </strong></span> </p>\r\n              )}\r\n            </div>\r\n            <div className='modalBtn'>\r\n            <button onClick={handleChange}> {props.tablelocale(\"Close\")} </button>\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\n// Reschedule Component - Renders DatePicker\r\nconst Reschedule = (props) => {\r\n  // changes state in parent component through callback passed to it via props\r\n  const { item, onTableUpdate } = props;\r\n  \r\n  const [startDate, setStartDate] = useState(new Date(props.item.createdOn));\r\n  const [showcal, setShowCal] = useState(false);\r\n\r\n\r\n  const handleCal = () => {\r\n    setShowCal(!showcal);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let datems = startDate.getTime();\r\n    // onTableUpdate is a callback function that passes campaign name and modified date \r\n    // to the handleUpdate function in parent (App) component in order to change state \r\n    onTableUpdate(item, datems)\r\n  }, [startDate]) // eslint-disable-line\r\n\r\n\r\n  const handleDate = (date) => {\r\n    setStartDate(date)\r\n  }\r\n\r\n// datepicker library used to select dates\r\n  return (\r\n    <div>\r\n    <span className='reschedule' onClick={handleCal}> <Image src={calIcon} alt='calendar' verticalAlign='middle'/> {props.tablelocale(\"Schedule Again\")} </span>\r\n    {showcal ? <div className='calendar'> <DatePicker selected={startDate} onChange={handleDate}/> </div> : null }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default withTranslation()(TableContent);","import React from 'react';\r\nimport TableContent from './TableContent';\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst TabContent = (props) => {\r\n    const { t } = props;\r\n    const calculateDays = 1000*60*60*24;\r\n    // calculations are done according to the current time so yesterday's afternoon campaign can still run up on live till today's afternoon until the 24 hour window period is over\r\n    let today = Date.now();\r\n\r\n    // campaigns data is filtered into each tab according to date and rendered as a table through TableContent component, again OnTabUpdate pass callback to the Reschedule component to update state in parent\r\n    let upcomingCampaign = props.campaigns.filter(item => (item.createdOn - today)/calculateDays > 0);\r\n    let liveCampaign = props.campaigns.filter(item => (item.createdOn - today)/calculateDays > -1 && (item.createdOn - today)/calculateDays <= 0);\r\n    let pastCampaign = props.campaigns.filter(item => (item.createdOn - today)/calculateDays <= -1);\r\n    \r\n    return (\r\n        <div>\r\n            {props.className === 'Upcoming' ? <TableContent campaignData={upcomingCampaign} className={t(\"Ahead\")} onTabUpdate={props.onUpdate} />: \r\n            props.className === 'Live' ? <TableContent campaignData={liveCampaign} onTabUpdate={props.onUpdate} />:\r\n            <TableContent campaignData={pastCampaign} className={t(\"Ago\")} onTabUpdate={props.onUpdate} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withTranslation()(TabContent);","export default __webpack_public_path__ + \"static/media/logo.8ceb82e5.png\";","import React, { useState, useEffect } from 'react';\nimport input from './inputData/input.json';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid, Header, Tab, Dropdown, Image } from 'semantic-ui-react';\nimport './App.css';\n// react-i18next is a react wrapper around i18n (Internationalization API)\nimport { withTranslation } from \"react-i18next\";\nimport TabContent from './Components/TabContent';\nimport { default as logo } from './icons/logo.png';\n\nconst App = (props) => {\n  \n  // for localization\n  const { t } = props;\n\n  // initial json input data\n  const campaignArray = input.data;\n\n  // Cache application data using local storage\n  const storeCampaign = localStorage.getItem('storeCampaign');\n\n  const [campaigns, setCampaigns] = useState(storeCampaign ? JSON.parse(storeCampaign) : campaignArray);\n\n  // updating state through child component (App(handleUpdate) -> TabContent(onUpdate prop) -> TableContent(onTabUpdate prop) -> Reschedule(onTableUpdate prop)) for date rescheduling\n  const handleUpdate = (game, dtval) => {\n    let updatedCampaigns = campaigns.map(item => item.name === game.name ? {...item, createdOn: dtval} : item);\n    setCampaigns(updatedCampaigns);\n  }\n\n\n  useEffect(() => {\n    localStorage.setItem('storeCampaign', JSON.stringify(campaigns));\n  }, [campaigns])\n  \n  // tabs for each category of campaign. Each Tab Content receives campaigns state and filter tabs according to date, handleUpdate is being passed as a prop further down to the Reschedule component at the end to update state in parent for changes to reflect\n  \n  const sections = ['Upcoming', 'Live', 'Past'];\n  const panes = sections.map(category => ({\n    menuItem: t(`${category} Campaigns`),\n    render: () => <Tab.Pane attached={false}> <TabContent campaigns={campaigns} className={category} onUpdate={handleUpdate} /> </Tab.Pane>\n  }))\n  \n  // dropdown options for language localization\n  const options = [\n    { key: 'en', text: 'English', value: 'en' },\n    { key: 'sv', text: 'Swedish', value: 'sv' },\n  ]\n\n  const handleDropdown = (e, data) => {\n    let language = data.value;\n    props.i18n.changeLanguage(language);\n  }\n  \n  // used semantic ui react UI library for responsive UI and clean consistent code.\n  return (\n    <div>\n      <Grid centered>\n        <Grid.Row>\n          <Grid.Column style={{height: '80px', background: '#1F2640' }}>\n            <Header> <Image src={logo} className=\"logo\" style={{width: \"147px\", height: \"45px\", left: \"182px\", top: \"17px\"}} alt='logo'/> </Header>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column verticalAlign='top'>\n            <Dropdown\n              selection\n              options={options}\n              onChange={(e,data) => handleDropdown(e,data)}\n              placeholder='Choose a Language'\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={12} verticalAlign='middle'>\n            <Header as='h1' textAlign='left'> {t(\"Manage Campaigns\")} </Header>\n          </Grid.Column>\n          <Grid.Column width={12} verticalAlign='middle'>\n            <Tab menu={{ secondary: true, pointing: true, className: \"wrapped\" }} panes={panes} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  )\n}\n\nexport default withTranslation()(App);\n         \n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport en from './locales/en.json';\r\nimport sv from './locales/sv.json';\r\n\r\nlet language = localStorage.getItem('language');\r\n\r\nif (language === undefined) {\r\n  language = 'en';\r\n}\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    en: { translations: en },\r\n    sv: { translations: sv },\r\n  },\r\n  fallbackLng: 'en',\r\n  lng: 'en',\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: ',',\r\n  },\r\n  react: {\r\n    wait: true, \r\n    useSuspense: false,\r\n  },\r\n});\r\n\r\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// i18n is internationalization (localization) API\nimport \"./i18n\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}